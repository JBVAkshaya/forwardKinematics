# This is a basic workflow to help you get started with Actions

name: Create release.

# Controls when the workflow will run
on: 
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  create_release:
    runs-on: ubuntu-20.04
    env:
      CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts
      CI_COMMIT_AUTHOR: Continuous Integration
    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Initialize mandatory git config
        run: |
          git config user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config user.email "noreply@github.com"
      - name: Set version variable
        run: echo "VERSION=$(poetry versios -s)" >> $GITHUB_ENV
      - name: Create release branch
        run: git checkout -b release/v$VERSION
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
      - name: Commit changelog
        run: |
          git add CHANGELOG.md
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
      - name: Builds python package
        run: poetry build
      - name: Create a release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrects.GITHUB_TOKEN }}
        with:
          tag_name: $VERSION
          release_name: Release $VERSION
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
      - name: Upload release assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: dist/forwardkinematics-$VERSION.tar.gz;dist/forwardkinematics-$VERSION-py3-none-any.whl
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to pypi
        uses: JRubics/poetry-publish@v1.13
        with:
          python_version: "3.8"
          pypi_token: ${{ secrets.PYPI_TOKEN }}
      - name: Push release branch
        run: git push origin release/v$VERSION
      - name: Update main branch
        run: |
          git checkout main
          git merge release/v$VERSION
          git push origin main
